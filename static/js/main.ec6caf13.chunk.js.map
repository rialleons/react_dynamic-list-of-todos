{"version":3,"sources":["utils/api.ts","types/Status.ts","utils/getVisibleTodos.ts","components/TodosContext/TodosContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","initialFilterState","global","All","query","initialContext","shownTodo","setShownTodo","filter","setFilter","TodosContext","React","createContext","GlobalStateProvider","children","useState","Provider","value","TodoItem","todo","useContext","isShown","id","className","classNames","completed","title","type","onClick","TodoList","todos","map","TodoFilter","onChange","event","target","Active","Completed","placeholder","style","pointerEvents","Loader","TodoModal","isLoading","setIsLoading","shownUser","setShownUser","useEffect","userId","finally","href","email","name","App","setTodos","visibleTodos","allTodos","visibleFilter","shownTodos","Error","lowerQuery","toLowerCase","includes","getVisibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec6caf13.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\nimport { User } from '../types/User';\n\nconst BASE_URL = (\n  'https://mate-academy.github.io/react_dynamic-list-of-todos/api'\n);\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL + url}.json`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Filter } from '../types/Filter';\nimport { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport const getVisibleTodos = (allTodos: Todo[], visibleFilter: Filter) => {\n  let shownTodos: Todo[] = [];\n\n  switch (visibleFilter.global) {\n    case Status.All:\n      shownTodos = [...allTodos];\n      break;\n\n    case Status.Active:\n      shownTodos = allTodos.filter(todo => !todo.completed);\n      break;\n\n    case Status.Completed:\n      shownTodos = allTodos.filter(todo => todo.completed);\n      break;\n\n    default:\n      throw new Error('Unknown filter!');\n  }\n\n  if (visibleFilter.query) {\n    const lowerQuery = visibleFilter.query.toLowerCase();\n\n    shownTodos = shownTodos.filter(todo => {\n      const lowerTitle = todo.title.toLowerCase();\n\n      return lowerTitle.includes(lowerQuery);\n    });\n  }\n\n  return shownTodos;\n};\n","import React, { useState } from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\nimport { Filter } from '../../types/Filter';\n\ntype Context = {\n  shownTodo: Todo | null;\n  setShownTodo: React.Dispatch<React.SetStateAction<Todo | null>>\n  filter: Filter,\n  setFilter: React.Dispatch<Filter>\n};\n\nconst initialFilterState: Filter = {\n  global: Status.All,\n  query: '',\n};\n\nconst initialContext: Context = {\n  shownTodo: null,\n  setShownTodo: () => {},\n  filter: initialFilterState,\n  setFilter: () => {},\n};\n\nexport const TodosContext = (\n  React.createContext(initialContext)\n);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const GlobalStateProvider: React.FC<Props> = ({ children }) => {\n  const [shownTodo, setShownTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState(initialFilterState);\n\n  return (\n    <TodosContext.Provider value={{\n      shownTodo,\n      setShownTodo,\n      filter,\n      setFilter,\n    }}\n    >\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../TodosContext';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { shownTodo, setShownTodo } = useContext(TodosContext);\n\n  const isShown = shownTodo?.id === todo.id;\n\n  const handleShowButton = () => {\n    setShownTodo(todo);\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': isShown,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span\n            className=\"icon\"\n            data-cy=\"iconCompleted\"\n          >\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={todo.completed\n            ? 'has-text-success'\n            : 'has-text-danger'}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleShowButton}\n        >\n          <span className=\"icon\">\n            <i className={`far ${isShown\n              ? 'fa-eye-slash'\n              : 'fa-eye'}`}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useContext } from 'react';\n\nimport { TodosContext } from '../TodosContext';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter = () => {\n  const { filter, setFilter } = useContext(TodosContext);\n\n  const handleGlobalFilterChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setFilter({\n      ...filter,\n      global: event.target.value as Status,\n    });\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFilter({\n      ...filter,\n      query: event.target.value,\n    });\n  };\n\n  const handleClearSearch = () => {\n    setFilter({\n      ...filter,\n      query: '',\n    });\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.global}\n            onChange={handleGlobalFilterChange}\n          >\n            <option value={Status.All}>All</option>\n            <option value={Status.Active}>Active</option>\n            <option value={Status.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filter.query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { Loader } from '../Loader';\nimport { getUser } from '../../utils/api';\nimport { User } from '../../types/User';\nimport { TodosContext } from '../TodosContext';\n\nexport const TodoModal: React.FC = () => {\n  const { shownTodo, setShownTodo } = useContext(TodosContext);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [shownUser, setShownUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (shownTodo) {\n      setIsLoading(true);\n\n      getUser(shownTodo.userId)\n        .then(setShownUser)\n        .finally(() => setIsLoading(false));\n    }\n  }, [shownTodo]);\n\n  const handleRemoveButton = () => {\n    setShownTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${shownTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleRemoveButton}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {shownTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {shownTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={shownUser?.email}>\n                {shownUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './utils/api';\nimport { getVisibleTodos } from './utils/getVisibleTodos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodosContext } from './components/TodosContext';\n\nexport const App: React.FC = () => {\n  const { shownTodo, filter } = useContext(TodosContext);\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visibleTodos = getVisibleTodos(todos, filter);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n              <TodoList todos={visibleTodos} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {shownTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { GlobalStateProvider } from './components/TodosContext';\n\nReactDOM.render(\n  <GlobalStateProvider>\n    <App />\n  </GlobalStateProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}